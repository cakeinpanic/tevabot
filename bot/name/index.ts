import {filter, first, map} from 'rxjs/operators';
import {usersList} from '../../database/usersList';
import {$commands, $messages} from '../bot';
import {IMessage} from '../entities';
import {sendAbout} from '../help/index';
import {sendMessageByBot} from '../utils/sendMessage';
import {isFromUser, mapByMatch, MESSAGES_TO_IGNORE} from '../utils/utils';

const $start = $commands.pipe(
    filter(msg => isFromUser(msg)),
    map(mapByMatch(/^\/start/))
);

const $setName = $start.pipe(filter(({match}) => !!match));

$setName.subscribe(({msg}) => {
    var from = msg.from.id;
    sendMessageByBot(
        from,
        '–ü—Ä–∏–≤–µ—Ç! –£–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é (—á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–≤–µ—Ä–∏—Ç—å —Å–ø–∏—Å–∫–∏). –ò –º—ã —Å—Ä–∞–∑—É –∂–µ –Ω–∞—á–Ω–µ–º!'
    );
    $messages
        .pipe(
            filter((m: IMessage) => from === m.from.id),
            first()
        )
        .subscribe(t => {
            MESSAGES_TO_IGNORE.push(t.message_id);
            usersList.setName(from, t.text);

            sendAbout(t.from.id, '–£—Ä–∞, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –±–æ—Ä—Ç! –°–µ–π—á–∞—Å —è —Ä–∞—Å—Å–∫–∞–∂—É –ø—Ä–æ —Å–µ–±—è üòä\n');
        });
});
